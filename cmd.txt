
m1064614@A2ML69078M SimpleGQL % go mod init Simplegql
go: creating new go.mod: module Simplegql

m1064614@A2ML69078M SimpleGQL % go get github.com/99designs/gqlgen
go: downloading github.com/99designs/gqlgen v0.17.39
go: downloading github.com/urfave/cli/v2 v2.25.5
go: downloading github.com/vektah/gqlparser/v2 v2.5.10
go: downloading golang.org/x/tools v0.9.3
go: downloading github.com/sosodev/duration v1.1.0
go: downloading golang.org/x/text v0.9.0
go: downloading github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673
go: downloading golang.org/x/mod v0.10.0
go: downloading golang.org/x/sys v0.8.0
go: added github.com/99designs/gqlgen v0.17.39
go: added github.com/agnivade/levenshtein v1.1.1
go: added github.com/cpuguy83/go-md2man/v2 v2.0.2
go: added github.com/google/uuid v1.3.0
go: added github.com/russross/blackfriday/v2 v2.1.0
go: added github.com/sosodev/duration v1.1.0
go: added github.com/urfave/cli/v2 v2.25.5
go: added github.com/vektah/gqlparser/v2 v2.5.10
go: added github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673
go: added golang.org/x/mod v0.10.0
go: added golang.org/x/sys v0.8.0
go: added golang.org/x/text v0.9.0
go: added golang.org/x/tools v0.9.3
go: added gopkg.in/yaml.v3 v3.0.1

m1064614@A2ML69078M SimpleGQL % printf '// +build tools\npackage tools\nimport _ "github.com/99designs/gqlgen"' | gofmt > tools.go

m1064614@A2ML69078M SimpleGQL % go mod tidy
go: downloading github.com/stretchr/testify v1.8.2
go: downloading github.com/andreyvit/diff v0.0.0-20170406064948-c7f18ee00883
go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
go: downloading github.com/gorilla/websocket v1.5.0
go: downloading github.com/mitchellh/mapstructure v1.5.0
go: downloading github.com/hashicorp/golang-lru/v2 v2.0.3
go: downloading golang.org/x/sync v0.2.0
go: downloading github.com/sergi/go-diff v1.3.1

m1064614@A2ML69078M SimpleGQL % go run github.com/99designs/gqlgen init
Creating gqlgen.yml
Creating graph/schema.graphqls
Creating server.go
Generating...

Exec "go run ./server.go" to start GraphQL server
m1064614@A2ML69078M SimpleGQL % go mod tidy
m1064614@A2ML69078M SimpleGQL % go mod vendor
m1064614@A2ML69078M SimpleGQL % go run server.go
2023/10/24 01:15:54 connect to http://localhost:8080/ for GraphQL playground
^Csignal: interrupt


m1064614@A2ML69078M SimpleGQL %
m1064614@A2ML69078M SimpleGQL %

m1064614@A2ML69078M SimpleGQL % go run github.com/99designs/gqlgen generate
validation failed: packages.Load: /Users/m1064614/go/src/SimpleGQL/graph/schema.resolvers.go:48:72: undefined: model.NewTodo

----->  Failed due to not deleting the schema.resolvers.go file
/Users/m1064614/go/src/SimpleGQL/graph/schema.resolvers.go:48:89: undefined: model.Todo
/Users/m1064614/go/src/SimpleGQL/graph/schema.resolvers.go:51:62: undefined: model.Todo

exit status 1

----->  After deletion it worked.
m1064614@A2ML69078M SimpleGQL % go run github.com/99designs/gqlgen generate
m1064614@A2ML69078M SimpleGQL % go run server.go
2023/10/24 01:29:13 connect to http://localhost:8080/ for GraphQL playground
^Csignal: interrupt
m1064614@A2ML69078M SimpleGQL %


//go:generate go get github.com/99designs/gqlgen


---------->//on localhost
----->post
mutation createVideo{
  createVideo(input:{
  title:"v2", url: "y2", userId: "22"
  }) {
    author{
      id
    }
    title
    url
  }
}

----->get
query findVideosfullDetails{
  videos{
    id
    title
    url
    author{
      id
      name
    }
  }
}

query findVideos{
  videos{
    title
    url
    author{
      id
    }
  }
}

///
func (r *mutationResolver) CreateVideo(ctx context.Context, input model.NewVideo) (*model.Video, error) {
	video := &model.Video{
		ID:     fmt.Sprintf("T%d", rand.Int),
		Title:  input.Title,
		URL:    input.URL,
		Author: &model.User{ID: input.UserID, Name: "user " + input.UserID},
	}
	r.videos = append(r.videos, video)
	return video, nil
}

// Videos is the resolver for the videos field.
func (r *queryResolver) Videos(ctx context.Context) ([]*model.Video, error) {
	res := r.videos
	return res, nil
}
///
m1064614@A2ML69078M start-gql %  go mod init start-gql
go: creating new go.mod: module start-gql
m1064614@A2ML69078M start-gql %  go get github.com/99designs/gqlgen
go: added github.com/99designs/gqlgen v0.17.39
.............other dependency packages as well.
m1064614@A2ML69078M start-gql % go run github.com/99designs/gqlgen init

Creating gqlgen.yml
Creating graph/schema.graphqls
Creating server.go
Generating...

Exec "go run ./server.go" to start GraphQL server
